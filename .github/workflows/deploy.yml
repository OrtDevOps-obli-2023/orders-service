name: Deploy to Amazon S3

on:
  workflow_call:
    inputs:
      CI_ENV:
        required: true
        type: string
      IMAGE:
        required: true
        type: string

    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_DEFAULT_REGION:
        required: true
      AWS_SESSION_TOKEN:
        required: true
      TOKEN_API:
        required: true
      ECS_SERVICE: # set this to your Amazon ECS service name
        required: true
      ECS_CLUSTER: # set this to your Amazon ECS cluster name
        required: true
      ECS_TASK_DEFINITION: # set this to the path to your Amazon ECS task definition
        required: true # file, e.g. .aws/task-definition.json
      CONTAINER_NAME: # set this to the name of the container in the
        required: true # containerDefinitions section of your task definition

env:
  APPROVERS: "SebaORT,JNMiguel, deploy-approvers-fe-angular"
jobs:
  approve:
    #validate deploy only if we are deploying to staging or prod
    if: inputs.CI_ENV == 'staging' || inputs.CI_ENV == 'prod'
    runs-on: ubuntu-latest
    steps:
      - run: echo 'environment ${{ inputs.CI_ENV }}'
      - uses: trstringer/manual-approval@v1.9.0
        with:
          secret: ${{ secrets.TOKEN_API }}
          approvers: ${{ env.APPROVERS }}
          issue-title: "Approve deploy to ${{ inputs.CI_ENV}}"
          exclude-workflow-initiator-as-approver: false
          # additional-approved-words: 'si'
          # additional-denied-words: 'no'
          minimum-approvals: 1
  deploy:
    needs: approve
    if: always() && (needs.approve.result == 'success' || needs.approve.result == 'skipped')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      #   - name: Download build artifacts
      #     uses: actions/download-artifact@v2
      #     with:
      #       name: ${{ inputs.ARTIFACT_NAME }}
      #       path: generated
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{secrets.AWS_DEFAULT_REGION}}
      - name: Deploy to ECS
        run: ./.github/scripts/deployECS.sh
        shell: bash
        env:
          IMAGE: ${{ inputs.IMAGE }}
          ARG2: ${{ inputs.CI_ENV }}
